// <auto-generated />
using MVCAssignments.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVCAssignments.Migrations
{
    [DbContext(typeof(MVCAssignmentsContext))]
    [Migration("20220215152748_second-seed")]
    partial class secondseed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVCAssignments.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1000,
                            City = "Göteborg",
                            Name = "Kålle Glagogubbe",
                            Phone = "031654321"
                        },
                        new
                        {
                            Id = 1001,
                            City = "Stockholm",
                            Name = "Sune Söderkis",
                            Phone = "08654321"
                        },
                        new
                        {
                            Id = 1002,
                            City = "Luleå",
                            Name = "Enok Evertsson",
                            Phone = "0704654321"
                        },
                        new
                        {
                            Id = 1003,
                            City = "Avesta",
                            Name = "Alva Alm",
                            Phone = "0703216541"
                        },
                        new
                        {
                            Id = 1004,
                            City = "Göteborg",
                            Name = "Ted Rajtantajtansson",
                            Phone = "031321654"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
